import{a2 as u}from"./index-c9329193.js";class T{constructor(){this.baseURL="http://localhost:8080/api/dashboard/vendor",this.token=u.get("token")}async checkPermission(){try{const e=`${this.baseURL}/`,o={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`}};if(!(await fetch(e,o)).ok)throw new Error("Network response was not ok");return!0}catch{return null}}async getTotalIncome(){try{const e=`${this.baseURL}/income`,o={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`}},n=await fetch(e,o);if(!n.ok)throw new Error("Network response was not ok");return await n.json()}catch{return null}}async getNumOrders(){try{const e=`${this.baseURL}/numOrders`,o={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`}},n=await fetch(e,o);if(!n.ok)throw new Error("Network response was not ok");return await n.json()}catch{return null}}async getTotalIncomesPerDay(){try{const e=`${this.baseURL}/totalIncomesPerDay`,o={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`}},n=await fetch(e,o);if(!n.ok)throw new Error("Network response was not ok");return n.json()}catch(e){return console.log(e),null}}async getProducts(){try{const e=`${this.baseURL}/products`,o={method:"GET",headers:{Authorization:`Bearer ${this.token}`}},n=await fetch(e,o);if(!n.ok)throw new Error("Network response was not ok");return await n.json()}catch{return}}async upsertProduct(e,o,n,r,t){try{let s=-1;try{s=parseInt(t)}catch{}const i={productId:e,name:o,description:n,price:r,stock:s},c=`${this.baseURL}/products/upsert`,_={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},body:JSON.stringify(i)},a=await fetch(c,_);if(!a.ok)throw new Error("Network response was not ok");return await a.json()}catch{return null}}async uploadProductImage(e,o){try{const n=new FormData;n.append("file",o);const r=await fetch(`${this.baseURL}/products/uploadImage?productId=${e}`,{method:"POST",headers:{Authorization:`Bearer ${this.token}`},body:n});if(!r.ok)throw new Error("Network response was not ok");return await r.json()}catch(n){return console.error("There was an error uploading the file:",n),null}}async getSignedImagePath(e){try{const o=await fetch(`${this.baseURL}/products/image/${e}`,{method:"GET",headers:{Authorization:`Bearer ${this.token}`}});if(!o.ok)throw new Error("Network response was not ok");return await o.json()}catch(o){return console.error("There was an error getting the product image:",o),null}}async deleteProduct(e){try{const o={productId:e},n=`${this.baseURL}/products/delete`,r={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},body:JSON.stringify(o)},t=await fetch(n,r);if(!t.ok)throw new Error("Network response was not ok");return await t.json()}catch{return null}}async deleteProductImage(e){try{const o={productId:e},n=`${this.baseURL}/products/deleteImage`,r={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},body:JSON.stringify(o)},t=await fetch(n,r);if(!t.ok)throw new Error("Network response was not ok");return await t.json()}catch{return null}}async getOrders(){try{const e=`${this.baseURL}/orders`,o={method:"GET",headers:{Authorization:`Bearer ${this.token}`}},n=await fetch(e,o);if(!n.ok)throw new Error("Network response was not ok");return await n.json()}catch(e){return console.error("There was an error getting the orders",e),null}}async getInvoices(){try{const e=`${this.baseURL}/invoices`,o={method:"GET",headers:{Authorization:`Bearer ${this.token}`}},n=await fetch(e,o);if(!n.ok)throw new Error("Network response was not ok");return await n.json()}catch(e){return console.error("There was an error getting the orders",e),null}}async createInvoice(e){try{const o=`${this.baseURL}/invoice`,n={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},body:JSON.stringify(e)},r=await fetch(o,n);if(!r.ok)throw new Error("Network response was not ok");const t=await r.text();return console.log(t),t}catch(o){return console.log(o),null}}async deleteInvoice(e){try{const o=`${this.baseURL}/deleteInvoice/${e}`,n={method:"GET",headers:{Authorization:`Bearer ${this.token}`}},r=await fetch(o,n);if(!r.ok)throw new Error("Network response was not ok");return await r.json()}catch(o){return console.error("There was an error getting the orders",o),null}}}export{T as v};
